#include<bits/stdc++.h>
using namespace std;
int dp[1002][1002];


int knapsack(int n,int W,int wg[],int val[])
{
    if(n==0 || W==0)
        return 0;
        
        if(dp[n][W]!=-1)
        {
            return dp[n][W];
        }
    if(wg[n-1]<=W)
    {
       dp[n][W]= max( val[n-1] + knapsack(n-1,W-wg[n-1],wg,val) , knapsack(n-1,W,wg,val) );
        return dp[n][W];
        
    }
    
    else if(wg[n-1]>W)
    {
        dp[n][W]=knapsack(n-1,W,wg,val);
        return dp[n][W];
    }
}
int main()
{
    int t;cin>>t;
    while(t--)
    {
        int n;cin>>n;
        int W;cin>>W;
    int wg[n],val[n];
    for(int i=0;i<n;i++) cin>>val[i];
    for(int i=0;i<n;i++) cin>>wg[i];
    
 
    memset(dp,-1,sizeof(dp));
    cout<<knapsack(n,W,wg,val)<<endl;
    }
}
