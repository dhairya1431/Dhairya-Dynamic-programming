<------------------------------------------------------------------------------------------------------------------------------------------>
//Memoised 
<------------------------------------------------------------------------------------------------------------------------------------------>
#include<bits/stdc++.h>
using namespace std;

int dp[1000+2][1000+2];
bool ispal(string s,int i,int j)
{
    if(i>=j) return true;
    while(i<j)
    {
        if(s[i]!=s[j]) return false;
         i++,j--;
    }
    return true;
}

int solve(string s,int i,int j)
{
    if(i>=j) return 0;
    
    if(dp[i][j]!=-1) return dp[i][j];
    
    if(ispal(s,i,j)==true) return 0;
    
    int ans=INT_MAX;
    
    for(int k=i;k<j;k++)
    {
        int left,right;
        
        if(dp[i][k]!=-1)
        left=dp[i][k];
        else 
        {
            dp[i][k]=solve(s,i,k);
            left=dp[i][k];
        }
        
        if(dp[k+1][j]!=-1)
        right=dp[k+1][j];
        else 
        {
            dp[k+1][j]=solve(s,k+1,j);
            right=dp[k+1][j];
        }
        
        int temp=1+left+right;
        
        ans=min(ans,temp);
    }
    return dp[i][j]=ans;
}
int main()
{
    int t;cin>>t;
    while(t--)
    {
        memset(dp,-1,sizeof(dp));
        string s;cin>>s;
        int n=s.length();
        
        cout<<solve(s,0,n-1)<<endl;
    }
}
