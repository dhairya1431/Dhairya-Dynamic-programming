#include<bits/stdc++.h>
using namespace std;
int dp[102][102];
int main()
{
    memset(dp,-1,sizeof(dp));
    int n,m;cin>>n>>m;
    string x,y;cin>>x>>y;
    for(int i=0;i<=n;i++)
    {
        for(int j=0;j<=m;j++)
        {
            if(j==0 || i==0) dp[i][j]=0;
            else if(x[i-1]==y[j-1]) dp[i][j]=1+dp[i-1][j-1];
            else dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
        }
    }
    cout<<m+n-dp[n][m];
}
<-------------------------------------------------------------------------------------------------------------------------------------------->
//Printing supersequence
<--------------------------------------------------------------------------------------------------------------------------------------------->
#include<bits/stdc++.h>
using namespace std;
int dp[102][102];

int main()
{
    memset(dp,-1,sizeof(dp));
    int n,m;cin>>n>>m;
    string x,y;cin>>x>>y;
    for(int i=0;i<=n;i++)
    {
        for(int j=0;j<=m;j++)
        {
            if(j==0 || i==0) dp[i][j]=0;
            else if(x[i-1]==y[j-1]) dp[i][j]=1+dp[i-1][j-1];
            else dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
        }
    }
    //cout<<dp[n][m];
    
    string ans;
    while(n!=0 && m!=0)
    {
        
        if(x[n-1]==y[m-1]) ans+=x[n-1],n--,m--;
        else
        {
            if(dp[n][m-1] > dp[n-1][m]) ans+=y[m-1],m--;
            else ans+=x[n-1],n--;
        }
    }
    while(n>0)
    ans+=x[n-1],n--;
    while(m>0)
    ans+=y[m-1],m--;
    for(int i=ans.length()-1;i>=0;i--) cout<<ans[i];
}
